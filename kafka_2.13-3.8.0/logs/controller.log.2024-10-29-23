[2024-10-29 23:01:28,319] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 23:01:28,326] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 23:01:28,328] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 23:01:28,328] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 23:02:00,667] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:02:00,668] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:02:00,668] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:02:00,668] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:02:00,688] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:02:00,688] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:02:00,689] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:02:00,711] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:02:00,712] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:02:00,712] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:02:10,387] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(_RERe_6vTUyMzvfPdFgJDg),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:02:10,387] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:06:28,331] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 23:06:28,333] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 23:06:28,335] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 23:06:28,335] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 23:07:24,984] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:07:24,984] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:07:24,984] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:07:24,984] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:07:25,006] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:07:25,006] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:07:25,006] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:07:25,030] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:07:25,030] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:07:25,031] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:07:26,870] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(F3ji-OomT0SdrQR5AgBgWg),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:07:26,871] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:07:32,717] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:07:32,717] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:07:32,718] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:07:32,718] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:07:32,740] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:07:32,740] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:07:32,740] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:07:32,761] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:07:32,762] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:07:32,762] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:07:32,877] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(iVvH2XCnSLegHqcBJUv1Xw),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:07:32,877] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:07:39,187] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:07:39,187] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:07:39,187] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:07:39,187] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:07:39,206] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:07:39,206] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:07:39,206] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:07:39,228] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:07:39,228] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:07:39,228] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:07:40,902] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(8993EhVFQAW0WO_1pYQdaQ),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:07:40,902] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:07:45,549] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:07:45,549] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:07:45,549] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:07:45,549] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:07:45,566] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:07:45,566] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:07:45,566] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:07:45,586] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:07:45,586] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:07:45,586] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:07:46,912] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(xoVA9MLRQ7m5zanLa8sswA),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:07:46,912] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:08:02,679] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:08:02,680] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:08:02,680] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:08:02,680] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:08:02,699] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:08:02,699] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:08:02,699] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:08:02,717] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:08:02,718] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:08:02,718] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:08:26,169] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(oXOLHPSgSzGfzGT8z682Fg),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:08:26,170] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:09:05,461] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:09:05,462] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:09:05,462] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:09:05,462] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:09:05,484] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:09:05,484] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:09:05,485] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:09:05,503] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:09:05,503] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:09:05,504] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:09:05,639] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(8V4SXAqRQ1K3vD5ncGFV9Q),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:09:05,639] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:09:12,458] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:09:12,459] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:09:12,459] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:09:12,459] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:09:12,478] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:09:12,478] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:09:12,478] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:09:12,499] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:09:12,499] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:09:12,499] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:09:13,659] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(czsuFfnsT5-jWa28t_r_bg),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:09:13,660] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:09:18,889] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:09:18,889] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:09:18,889] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:09:18,889] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:09:18,909] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:09:18,909] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:09:18,909] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:09:18,928] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:09:18,928] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:09:18,929] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:09:19,677] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(xeLPfTDHQRKMKNpW4gLhLg),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:09:19,677] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:11:18,378] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:11:18,378] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:11:18,378] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:18,378] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:18,399] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:11:18,399] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:18,400] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:18,421] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:18,421] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:11:18,422] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:11:19,972] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(bnn_pU-SSma2aa8YBdLRQA),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:11:19,972] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:11:27,660] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:11:27,660] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:11:27,660] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:27,660] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:27,679] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:11:27,679] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:27,679] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:27,699] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:27,700] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:11:27,700] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:11:27,989] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(j3rtrf-OTrCu96K8KyxbHA),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:11:27,989] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:11:28,329] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 23:11:28,329] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 23:11:28,330] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 23:11:28,330] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 23:11:32,407] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:11:32,407] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:11:32,407] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:32,407] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:32,425] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:11:32,425] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:32,425] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:32,444] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:32,444] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:11:32,444] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:11:33,985] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(9YUNr0TrSZ-IbDzdM5y1zQ),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:11:33,985] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:11:37,133] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:11:37,134] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:11:37,134] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:37,134] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:37,157] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:11:37,157] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:37,157] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:37,179] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:37,179] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:11:37,179] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:11:38,011] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(P08yCgwOT3WFuj7jR1U9Ew),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:11:38,012] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:11:55,171] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:11:55,172] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:11:55,172] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:55,172] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:55,190] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:11:55,190] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:55,190] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:55,211] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:11:55,212] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:11:55,212] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:11:56,054] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(c13U9lK5S3y3Wh0kfufKEQ),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:11:56,054] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:12:00,762] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:12:00,763] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:12:00,763] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:00,763] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:00,781] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:12:00,781] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:00,781] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:00,800] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:00,800] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:12:00,800] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:12:02,064] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(z3qAufYdSmi10YGcrnbj8Q),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:12:02,064] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:12:06,132] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:12:06,133] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:12:06,134] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:06,134] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:06,151] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:12:06,151] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:06,151] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:06,169] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:06,169] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:12:06,169] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:12:08,079] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(_Mjz6xM9S_SwaYa9ZHXwqw),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:12:08,079] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:12:11,370] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:12:11,370] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:12:11,370] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:11,370] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:11,404] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:12:11,404] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:11,404] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:11,423] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:11,423] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:12:11,423] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:12:12,089] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(ZpOiF5b5QjOZm0E1LBvT2Q),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:12:12,090] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:12:18,730] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:12:18,730] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:12:18,730] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:18,730] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:18,749] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:12:18,749] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:18,749] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:18,767] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:18,768] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:12:18,768] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:12:20,109] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(pXJt_8LDTZWTidbFdlGpPg),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:12:20,109] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:12:28,923] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:12:28,923] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:12:28,923] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:28,923] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:28,943] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:12:28,944] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:28,944] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:28,964] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:28,964] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:12:28,964] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:12:30,136] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(3zyd0V3cQXu-dZ77sK03_g),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:12:30,136] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:12:49,258] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:12:49,259] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:12:49,259] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:49,259] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:49,279] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:12:49,279] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:49,279] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:49,299] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:12:49,300] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:12:49,300] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:12:50,186] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(KU7OWSoBTPadqRO_Y6onsQ),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:12:50,186] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:13:16,129] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:13:16,130] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:13:16,130] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:13:16,130] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:13:16,151] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:13:16,151] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:13:16,151] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:13:16,171] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:13:16,171] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:13:16,172] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:13:16,240] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(Q9tCbBk-RAGaGSrZj1dgCA),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:13:16,240] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:13:30,699] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2024-10-29 23:13:30,700] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2024-10-29 23:13:30,700] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2024-10-29 23:13:30,703] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),--group-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),trade_events-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),trades-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:11),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),top_k_trades-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:11),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2024-10-29 23:13:31,060] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-10-29 23:13:31,060] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-10-29 23:13:31,060] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-10-29 23:13:31,060] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2024-10-29 23:13:31,060] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2024-10-29 23:13:31,060] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-10-29 23:13:31,061] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-10-29 23:13:31,061] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2024-10-29 23:13:31,061] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2024-10-29 23:13:31,061] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2024-10-29 23:13:31,061] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2024-10-29 23:13:35,545] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-10-29 23:13:35,553] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 12 and epoch zk version is now 12 (kafka.controller.KafkaController)
[2024-10-29 23:13:35,554] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2024-10-29 23:13:35,555] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-10-29 23:13:35,555] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-10-29 23:13:35,556] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2024-10-29 23:13:35,560] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 1040) (kafka.controller.KafkaController)
[2024-10-29 23:13:35,565] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2024-10-29 23:13:35,576] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-10-29 23:13:35,577] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-10-29 23:13:35,578] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2024-10-29 23:13:35,578] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-10-29 23:13:35,578] INFO [Controller id=1] Current list of topics in the cluster: HashSet(trade_events, trades, --group, __consumer_offsets, top_k_trades) (kafka.controller.KafkaController)
[2024-10-29 23:13:35,578] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-10-29 23:13:35,579] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-10-29 23:13:35,580] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-10-29 23:13:35,580] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-10-29 23:13:35,580] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-10-29 23:13:35,580] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2024-10-29 23:13:35,587] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-10-29 23:13:35,590] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-10-29 23:13:35,593] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9092 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-10-29 23:13:35,600] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-10-29 23:13:35,600] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=top_k_trades,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=--group,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=trades,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=trade_events,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-10-29 23:13:35,601] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-10-29 23:13:35,602] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-10-29 23:13:35,602] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, --group-0 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, trade_events-0 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, trades-0 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, top_k_trades-0 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-10-29 23:13:35,602] INFO [Controller id=1] Ready to serve as the new controller with epoch 12 (kafka.controller.KafkaController)
[2024-10-29 23:13:35,603] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-10-29 23:13:35,603] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-10-29 23:13:35,603] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-10-29 23:13:35,603] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-10-29 23:13:35,604] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-10-29 23:13:35,608] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-10-29 23:13:35,697] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-10-29 23:13:40,614] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 23:13:40,614] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 23:13:40,617] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 23:13:40,618] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 23:13:48,940] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:13:48,940] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:13:48,941] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:13:48,941] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:13:48,972] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:13:48,972] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:13:48,973] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:13:48,996] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:13:48,996] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:13:48,996] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:13:50,333] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(thkhenK9S1GpDdsEVC7Lyw),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:13:50,334] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:13:58,466] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:13:58,466] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:13:58,466] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:13:58,466] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:13:58,486] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:13:58,486] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:13:58,486] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:13:58,507] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:13:58,507] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:13:58,507] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:14:00,355] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(RF8Q0AniRGG272Ew2RtVVg),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:14:00,355] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:15:32,542] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:15:32,542] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:15:32,542] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:15:32,542] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:15:32,572] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:15:32,572] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:15:32,573] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:15:32,592] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:15:32,592] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:15:32,593] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:15:32,674] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(0Kicyf8cTjGWIcSVt1EfdQ),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:15:32,674] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:18:09,986] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:18:09,986] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 23:18:09,987] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:18:09,987] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 23:18:10,005] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 23:18:10,005] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 23:18:10,006] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 23:18:10,026] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 23:18:10,026] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 23:18:10,027] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 23:18:40,619] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 23:18:40,620] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 23:18:40,623] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 23:18:40,623] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 23:18:42,351] INFO [Controller id=1] New topics: [HashSet(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(P8YSxO9AQJelmsruaR5pAA),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 23:18:42,351] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 23:20:46,256] DEBUG [Controller id=1] Read current producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=10000, size=1000), Zk path version 11 (kafka.controller.KafkaController)
[2024-10-29 23:20:46,263] INFO [Controller id=1] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=11000, size=1000) by writing to Zk with path version 12 (kafka.controller.KafkaController)
[2024-10-29 23:23:40,627] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 23:23:40,628] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 23:23:40,631] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 23:23:40,631] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 23:28:40,618] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 23:28:40,620] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 23:28:40,624] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 23:28:40,624] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 23:33:40,629] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 23:33:40,629] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 23:33:40,633] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 23:33:40,633] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 23:38:40,635] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 23:38:40,636] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 23:38:40,638] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 23:38:40,638] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 23:43:40,639] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 23:43:40,640] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 23:43:40,642] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 23:43:40,642] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 23:48:40,647] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 23:48:40,650] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 23:48:40,654] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 23:48:40,654] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 23:53:40,677] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 23:53:40,677] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 23:53:40,679] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 23:53:40,679] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 23:58:40,685] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 23:58:40,686] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 23:58:40,689] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 23:58:40,690] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
