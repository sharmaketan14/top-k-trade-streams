[2024-10-30 08:02:05,891] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-30 08:02:05,895] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-30 08:02:05,898] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-30 08:02:05,898] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-30 08:07:05,900] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-30 08:07:05,902] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-30 08:07:05,905] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-30 08:07:05,905] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-30 08:12:05,911] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-30 08:12:05,913] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-30 08:12:05,915] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-30 08:12:05,915] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-30 08:17:05,933] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-30 08:17:05,934] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-30 08:17:05,937] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-30 08:17:05,937] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-30 08:22:05,946] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-30 08:22:05,949] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-30 08:22:05,953] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-30 08:22:05,953] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-30 08:27:05,960] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-30 08:27:05,962] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-30 08:27:05,965] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-30 08:27:05,965] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-30 08:29:50,476] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2024-10-30 08:29:50,476] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2024-10-30 08:29:50,476] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2024-10-30 08:29:50,480] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),--group-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),trade_events-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),trades-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:11),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),top_k_trades-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:12),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2024-10-30 08:29:50,740] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-10-30 08:29:50,740] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-10-30 08:29:50,740] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-10-30 08:29:50,740] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2024-10-30 08:29:50,740] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2024-10-30 08:29:50,741] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-10-30 08:29:50,741] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-10-30 08:29:50,741] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2024-10-30 08:29:50,741] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2024-10-30 08:29:50,741] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2024-10-30 08:29:50,742] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2024-10-30 08:30:02,032] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-10-30 08:30:02,043] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 14 and epoch zk version is now 14 (kafka.controller.KafkaController)
[2024-10-30 08:30:02,043] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2024-10-30 08:30:02,045] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-10-30 08:30:02,046] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-10-30 08:30:02,046] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2024-10-30 08:30:02,050] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 1136) (kafka.controller.KafkaController)
[2024-10-30 08:30:02,056] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2024-10-30 08:30:02,071] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-10-30 08:30:02,072] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-10-30 08:30:02,073] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2024-10-30 08:30:02,073] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-10-30 08:30:02,073] INFO [Controller id=1] Current list of topics in the cluster: HashSet(trade_events, trades, --group, __consumer_offsets, top_k_trades) (kafka.controller.KafkaController)
[2024-10-30 08:30:02,076] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-10-30 08:30:02,081] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-10-30 08:30:02,081] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-10-30 08:30:02,082] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-10-30 08:30:02,082] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-10-30 08:30:02,082] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2024-10-30 08:30:02,086] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-10-30 08:30:02,088] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-10-30 08:30:02,090] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9092 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-10-30 08:30:02,096] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-10-30 08:30:02,096] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=top_k_trades,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=--group,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=trades,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=trade_events,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-10-30 08:30:02,096] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-10-30 08:30:02,097] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-10-30 08:30:02,098] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, --group-0 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, trade_events-0 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, trades-0 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, top_k_trades-0 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-10-30 08:30:02,098] INFO [Controller id=1] Ready to serve as the new controller with epoch 14 (kafka.controller.KafkaController)
[2024-10-30 08:30:02,100] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-10-30 08:30:02,100] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-10-30 08:30:02,100] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-10-30 08:30:02,100] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-10-30 08:30:02,101] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-10-30 08:30:02,107] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-10-30 08:30:02,194] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-10-30 08:30:07,112] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-30 08:30:07,112] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-30 08:30:07,114] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-30 08:30:07,115] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-30 08:30:24,219] DEBUG [Controller id=1] Read current producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=12000, size=1000), Zk path version 13 (kafka.controller.KafkaController)
[2024-10-30 08:30:24,226] INFO [Controller id=1] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=13000, size=1000) by writing to Zk with path version 14 (kafka.controller.KafkaController)
[2024-10-30 08:35:07,118] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-30 08:35:07,120] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-30 08:35:07,124] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-30 08:35:07,124] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-30 08:40:07,133] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-30 08:40:07,135] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-30 08:40:07,139] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-30 08:40:07,139] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-30 08:45:07,146] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-30 08:45:07,147] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-30 08:45:07,150] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-30 08:45:07,150] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-30 08:47:01,406] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2024-10-30 08:47:01,407] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2024-10-30 08:47:01,407] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2024-10-30 08:47:01,411] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),--group-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),trade_events-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),trades-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:11),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),top_k_trades-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:12),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2024-10-30 08:47:01,692] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-10-30 08:47:01,692] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-10-30 08:47:01,692] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-10-30 08:47:01,692] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2024-10-30 08:47:01,693] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2024-10-30 08:47:01,693] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-10-30 08:47:01,693] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-10-30 08:47:01,694] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2024-10-30 08:47:01,694] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2024-10-30 08:47:01,694] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2024-10-30 08:47:01,694] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2024-10-30 08:47:21,808] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-10-30 08:47:21,818] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 15 and epoch zk version is now 15 (kafka.controller.KafkaController)
[2024-10-30 08:47:21,819] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2024-10-30 08:47:21,820] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-10-30 08:47:21,821] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-10-30 08:47:21,822] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2024-10-30 08:47:21,826] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 1156) (kafka.controller.KafkaController)
[2024-10-30 08:47:21,831] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2024-10-30 08:47:21,845] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-10-30 08:47:21,846] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-10-30 08:47:21,847] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2024-10-30 08:47:21,847] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-10-30 08:47:21,847] INFO [Controller id=1] Current list of topics in the cluster: HashSet(trade_events, trades, --group, __consumer_offsets, top_k_trades) (kafka.controller.KafkaController)
[2024-10-30 08:47:21,850] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-10-30 08:47:21,855] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-10-30 08:47:21,855] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-10-30 08:47:21,855] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-10-30 08:47:21,856] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-10-30 08:47:21,857] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2024-10-30 08:47:21,860] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-10-30 08:47:21,862] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-10-30 08:47:21,863] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9092 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-10-30 08:47:21,871] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-10-30 08:47:21,871] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=top_k_trades,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=--group,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=trades,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=trade_events,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-10-30 08:47:21,871] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-10-30 08:47:21,872] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-10-30 08:47:21,873] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, --group-0 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, trade_events-0 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, trades-0 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, top_k_trades-0 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-10-30 08:47:21,873] INFO [Controller id=1] Ready to serve as the new controller with epoch 15 (kafka.controller.KafkaController)
[2024-10-30 08:47:21,874] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-10-30 08:47:21,874] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-10-30 08:47:21,875] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-10-30 08:47:21,875] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-10-30 08:47:21,875] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-10-30 08:47:21,881] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-10-30 08:47:21,969] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-10-30 08:47:26,888] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-30 08:47:26,889] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-30 08:47:26,895] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-30 08:47:26,898] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-30 08:47:39,804] DEBUG [Controller id=1] Read current producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=13000, size=1000), Zk path version 14 (kafka.controller.KafkaController)
[2024-10-30 08:47:39,811] INFO [Controller id=1] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=14000, size=1000) by writing to Zk with path version 15 (kafka.controller.KafkaController)
[2024-10-30 08:52:01,836] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-30 08:52:01,837] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-30 08:52:01,837] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:01,838] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:01,871] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-30 08:52:01,871] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:01,871] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:01,894] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:01,895] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-30 08:52:01,895] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-30 08:52:08,981] DEBUG [Controller id=1] Delete topics listener fired for topics trades to be deleted (kafka.controller.KafkaController)
[2024-10-30 08:52:08,982] INFO [Controller id=1] Starting topic deletion for topics trades (kafka.controller.KafkaController)
[2024-10-30 08:52:08,982] INFO [Topic Deletion Manager 1] Handling deletion for topics trades (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:08,982] INFO [Topic Deletion Manager 1] Deletion of topic trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:09,002] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-30 08:52:09,002] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:09,003] INFO [Topic Deletion Manager 1] Handling deletion for topics trades (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:09,022] INFO [Topic Deletion Manager 1] Deletion of topic trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:09,022] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-30 08:52:09,023] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-30 08:52:18,206] DEBUG [Controller id=1] Delete topics listener fired for topics trade_events to be deleted (kafka.controller.KafkaController)
[2024-10-30 08:52:18,206] INFO [Controller id=1] Starting topic deletion for topics trade_events (kafka.controller.KafkaController)
[2024-10-30 08:52:18,207] INFO [Topic Deletion Manager 1] Handling deletion for topics trade_events (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:18,207] INFO [Topic Deletion Manager 1] Deletion of topic trade_events (re)started (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:18,225] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(trade_events-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-30 08:52:18,225] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=trade_events,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:18,225] INFO [Topic Deletion Manager 1] Handling deletion for topics trade_events (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:18,248] INFO [Topic Deletion Manager 1] Deletion of topic trade_events successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:18,248] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-30 08:52:18,248] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-30 08:52:18,329] INFO [Controller id=1] New topics: [Set(trade_events)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(trade_events,Some(YAhJSX29TeGTPpY0WhLHjQ),Map(trade_events-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-30 08:52:18,329] INFO [Controller id=1] New partition creation callback for trade_events-0 (kafka.controller.KafkaController)
[2024-10-30 08:52:26,903] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-30 08:52:26,903] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-30 08:52:26,903] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-30 08:52:26,903] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-30 08:52:27,507] DEBUG [Controller id=1] Delete topics listener fired for topics trade_events to be deleted (kafka.controller.KafkaController)
[2024-10-30 08:52:27,508] INFO [Controller id=1] Starting topic deletion for topics trade_events (kafka.controller.KafkaController)
[2024-10-30 08:52:27,508] INFO [Topic Deletion Manager 1] Handling deletion for topics trade_events (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:27,508] INFO [Topic Deletion Manager 1] Deletion of topic trade_events (re)started (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:27,526] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(trade_events-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-30 08:52:27,526] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=trade_events,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:27,526] INFO [Topic Deletion Manager 1] Handling deletion for topics trade_events (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:27,546] INFO [Topic Deletion Manager 1] Deletion of topic trade_events successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:27,546] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-30 08:52:27,547] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-30 08:52:27,627] INFO [Controller id=1] New topics: [Set(trade_events)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(trade_events,Some(3lzyik3LSTqKY1FGswfYyg),Map(trade_events-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-30 08:52:27,627] INFO [Controller id=1] New partition creation callback for trade_events-0 (kafka.controller.KafkaController)
[2024-10-30 08:52:55,945] DEBUG [Controller id=1] Delete topics listener fired for topics trade_events to be deleted (kafka.controller.KafkaController)
[2024-10-30 08:52:55,945] INFO [Controller id=1] Starting topic deletion for topics trade_events (kafka.controller.KafkaController)
[2024-10-30 08:52:55,945] INFO [Topic Deletion Manager 1] Handling deletion for topics trade_events (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:55,945] INFO [Topic Deletion Manager 1] Deletion of topic trade_events (re)started (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:55,968] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(trade_events-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-30 08:52:55,968] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=trade_events,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:55,968] INFO [Topic Deletion Manager 1] Handling deletion for topics trade_events (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:55,989] INFO [Topic Deletion Manager 1] Deletion of topic trade_events successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-30 08:52:55,989] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-30 08:52:55,990] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-30 08:53:22,871] INFO [Controller id=1] New topics: [Set(trade_events)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(trade_events,Some(tbzSSikiTaO556kmZWQUyw),Map(trade_events-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-30 08:53:22,871] INFO [Controller id=1] New partition creation callback for trade_events-0 (kafka.controller.KafkaController)
[2024-10-30 08:57:26,911] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-30 08:57:26,912] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-30 08:57:26,914] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-30 08:57:26,915] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-30 08:59:42,038] INFO [Controller id=1] New topics: [Set(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(bXRyhn-NQgK5FPLf2mwqrA),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-30 08:59:42,039] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
