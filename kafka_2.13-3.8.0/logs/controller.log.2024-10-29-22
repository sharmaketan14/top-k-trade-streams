[2024-10-29 22:06:23,130] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-10-29 22:06:23,141] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 11 and epoch zk version is now 11 (kafka.controller.KafkaController)
[2024-10-29 22:06:23,142] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2024-10-29 22:06:23,143] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-10-29 22:06:23,144] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-10-29 22:06:23,145] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2024-10-29 22:06:23,149] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 620) (kafka.controller.KafkaController)
[2024-10-29 22:06:23,155] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2024-10-29 22:06:23,170] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-10-29 22:06:23,171] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-10-29 22:06:23,171] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2024-10-29 22:06:23,172] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-10-29 22:06:23,172] INFO [Controller id=1] Current list of topics in the cluster: HashSet(trade_events, trades, your_kafka_topic, --group, __consumer_offsets, top_k_trades) (kafka.controller.KafkaController)
[2024-10-29 22:06:23,172] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-10-29 22:06:23,177] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-10-29 22:06:23,177] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-10-29 22:06:23,177] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-10-29 22:06:23,177] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-10-29 22:06:23,178] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2024-10-29 22:06:23,183] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-10-29 22:06:23,185] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-10-29 22:06:23,187] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9092 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-10-29 22:06:23,193] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-10-29 22:06:23,194] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=top_k_trades,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=--group,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=your_kafka_topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=trades,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=trade_events,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-10-29 22:06:23,194] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-10-29 22:06:23,195] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-10-29 22:06:23,195] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, --group-0 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, trade_events-0 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, trades-0 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, top_k_trades-0 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, your_kafka_topic-0 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-10-29 22:06:23,196] INFO [Controller id=1] Ready to serve as the new controller with epoch 11 (kafka.controller.KafkaController)
[2024-10-29 22:06:23,197] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-10-29 22:06:23,197] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-10-29 22:06:23,197] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-10-29 22:06:23,198] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-10-29 22:06:23,198] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-10-29 22:06:23,205] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-10-29 22:06:23,296] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-10-29 22:06:28,210] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 22:06:28,210] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 22:06:28,211] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 22:06:28,212] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 22:11:28,217] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 22:11:28,219] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 22:11:28,223] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 22:11:28,223] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 22:13:13,297] DEBUG [Controller id=1] Read current producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=9000, size=1000), Zk path version 10 (kafka.controller.KafkaController)
[2024-10-29 22:13:13,303] INFO [Controller id=1] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=10000, size=1000) by writing to Zk with path version 11 (kafka.controller.KafkaController)
[2024-10-29 22:16:28,230] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 22:16:28,232] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 22:16:28,235] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 22:16:28,235] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 22:21:28,239] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 22:21:28,241] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 22:21:28,245] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 22:21:28,245] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 22:26:28,252] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 22:26:28,254] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 22:26:28,256] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 22:26:28,256] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 22:31:28,261] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 22:31:28,263] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 22:31:28,267] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 22:31:28,267] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 22:36:28,273] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 22:36:28,274] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 22:36:28,277] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 22:36:28,277] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 22:41:28,283] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 22:41:28,286] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 22:41:28,291] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 22:41:28,292] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 22:44:38,058] DEBUG [Controller id=1] Delete topics listener fired for topics trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 22:44:38,059] INFO [Controller id=1] Starting topic deletion for topics trades (kafka.controller.KafkaController)
[2024-10-29 22:44:38,060] INFO [Topic Deletion Manager 1] Handling deletion for topics trades (kafka.controller.TopicDeletionManager)
[2024-10-29 22:44:38,060] INFO [Topic Deletion Manager 1] Deletion of topic trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 22:44:38,063] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-10-29 22:44:38,109] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 22:44:38,109] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 22:44:38,109] INFO [Topic Deletion Manager 1] Handling deletion for topics trades (kafka.controller.TopicDeletionManager)
[2024-10-29 22:44:38,136] INFO [Topic Deletion Manager 1] Deletion of topic trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 22:44:38,136] INFO [Controller id=1] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 22:44:38,137] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 22:44:39,316] INFO [Controller id=1] New topics: [HashSet(trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(trades,Some(N1mxcLx9SOaHySpbIU8bvQ),Map(trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 22:44:39,316] INFO [Controller id=1] New partition creation callback for trades-0 (kafka.controller.KafkaController)
[2024-10-29 22:44:55,596] DEBUG [Controller id=1] Delete topics listener fired for topics trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 22:44:55,596] INFO [Controller id=1] Starting topic deletion for topics trades (kafka.controller.KafkaController)
[2024-10-29 22:44:55,596] INFO [Topic Deletion Manager 1] Handling deletion for topics trades (kafka.controller.TopicDeletionManager)
[2024-10-29 22:44:55,596] INFO [Topic Deletion Manager 1] Deletion of topic trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 22:44:55,615] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 22:44:55,615] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 22:44:55,616] INFO [Topic Deletion Manager 1] Handling deletion for topics trades (kafka.controller.TopicDeletionManager)
[2024-10-29 22:44:55,633] INFO [Topic Deletion Manager 1] Deletion of topic trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 22:44:55,634] INFO [Controller id=1] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 22:44:55,634] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 22:44:57,338] INFO [Controller id=1] New topics: [HashSet(trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(trades,Some(JHhL-kreS8Gyd5HwbYHwsw),Map(trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 22:44:57,338] INFO [Controller id=1] New partition creation callback for trades-0 (kafka.controller.KafkaController)
[2024-10-29 22:45:07,322] DEBUG [Controller id=1] Delete topics listener fired for topics trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 22:45:07,323] INFO [Controller id=1] Starting topic deletion for topics trades (kafka.controller.KafkaController)
[2024-10-29 22:45:07,323] INFO [Topic Deletion Manager 1] Handling deletion for topics trades (kafka.controller.TopicDeletionManager)
[2024-10-29 22:45:07,323] INFO [Topic Deletion Manager 1] Deletion of topic trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 22:45:07,343] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 22:45:07,343] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 22:45:07,343] INFO [Topic Deletion Manager 1] Handling deletion for topics trades (kafka.controller.TopicDeletionManager)
[2024-10-29 22:45:07,362] INFO [Topic Deletion Manager 1] Deletion of topic trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 22:45:07,362] INFO [Controller id=1] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 22:45:07,363] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 22:45:07,457] INFO [Controller id=1] New topics: [HashSet(trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(trades,Some(ft53ZLAET6ySzKP8zqVz-Q),Map(trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 22:45:07,457] INFO [Controller id=1] New partition creation callback for trades-0 (kafka.controller.KafkaController)
[2024-10-29 22:45:29,470] DEBUG [Controller id=1] Delete topics listener fired for topics trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 22:45:29,470] INFO [Controller id=1] Starting topic deletion for topics trades (kafka.controller.KafkaController)
[2024-10-29 22:45:29,470] INFO [Topic Deletion Manager 1] Handling deletion for topics trades (kafka.controller.TopicDeletionManager)
[2024-10-29 22:45:29,470] INFO [Topic Deletion Manager 1] Deletion of topic trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 22:45:29,493] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 22:45:29,493] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 22:45:29,493] INFO [Topic Deletion Manager 1] Handling deletion for topics trades (kafka.controller.TopicDeletionManager)
[2024-10-29 22:45:29,509] INFO [Topic Deletion Manager 1] Deletion of topic trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 22:45:29,509] INFO [Controller id=1] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 22:45:29,510] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 22:45:43,960] INFO [Controller id=1] New topics: [HashSet(trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(trades,Some(_tVsWO9BRm-KpHW-fd0izQ),Map(trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 22:45:43,961] INFO [Controller id=1] New partition creation callback for trades-0 (kafka.controller.KafkaController)
[2024-10-29 22:45:50,889] DEBUG [Controller id=1] Delete topics listener fired for topics trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 22:45:50,889] INFO [Controller id=1] Starting topic deletion for topics trades (kafka.controller.KafkaController)
[2024-10-29 22:45:50,889] INFO [Topic Deletion Manager 1] Handling deletion for topics trades (kafka.controller.TopicDeletionManager)
[2024-10-29 22:45:50,889] INFO [Topic Deletion Manager 1] Deletion of topic trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 22:45:50,908] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 22:45:50,908] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 22:45:50,908] INFO [Topic Deletion Manager 1] Handling deletion for topics trades (kafka.controller.TopicDeletionManager)
[2024-10-29 22:45:50,926] INFO [Topic Deletion Manager 1] Deletion of topic trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 22:45:50,927] INFO [Controller id=1] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 22:45:50,927] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 22:46:02,777] INFO [Controller id=1] New topics: [HashSet(trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(trades,Some(89NetL-hTdWjbSJxGTXvPw),Map(trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 22:46:02,777] INFO [Controller id=1] New partition creation callback for trades-0 (kafka.controller.KafkaController)
[2024-10-29 22:46:28,298] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 22:46:28,300] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 22:46:28,302] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 22:46:28,302] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 22:51:28,307] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 22:51:28,309] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 22:51:28,311] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 22:51:28,311] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 22:56:28,314] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-10-29 22:56:28,315] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-10-29 22:56:28,316] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-10-29 22:56:28,316] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-10-29 22:56:34,746] DEBUG [Controller id=1] Delete topics listener fired for topics trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 22:56:34,746] INFO [Controller id=1] Starting topic deletion for topics trades (kafka.controller.KafkaController)
[2024-10-29 22:56:34,746] INFO [Topic Deletion Manager 1] Handling deletion for topics trades (kafka.controller.TopicDeletionManager)
[2024-10-29 22:56:34,746] INFO [Topic Deletion Manager 1] Deletion of topic trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 22:56:34,750] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-10-29 22:56:34,771] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 22:56:34,772] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 22:56:34,772] INFO [Topic Deletion Manager 1] Handling deletion for topics trades (kafka.controller.TopicDeletionManager)
[2024-10-29 22:56:34,793] INFO [Topic Deletion Manager 1] Deletion of topic trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 22:56:34,794] INFO [Controller id=1] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 22:56:34,794] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 22:56:49,102] DEBUG [Controller id=1] Delete topics listener fired for topics top_k_trades to be deleted (kafka.controller.KafkaController)
[2024-10-29 22:56:49,103] INFO [Controller id=1] Starting topic deletion for topics top_k_trades (kafka.controller.KafkaController)
[2024-10-29 22:56:49,103] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 22:56:49,103] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 22:56:49,122] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(top_k_trades-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 22:56:49,122] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=top_k_trades,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 22:56:49,122] INFO [Topic Deletion Manager 1] Handling deletion for topics top_k_trades (kafka.controller.TopicDeletionManager)
[2024-10-29 22:56:49,143] INFO [Topic Deletion Manager 1] Deletion of topic top_k_trades successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 22:56:49,143] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 22:56:49,144] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 22:57:03,867] DEBUG [Controller id=1] Delete topics listener fired for topics your_kafka_topic to be deleted (kafka.controller.KafkaController)
[2024-10-29 22:57:03,867] INFO [Controller id=1] Starting topic deletion for topics your_kafka_topic (kafka.controller.KafkaController)
[2024-10-29 22:57:03,867] INFO [Topic Deletion Manager 1] Handling deletion for topics your_kafka_topic (kafka.controller.TopicDeletionManager)
[2024-10-29 22:57:03,867] INFO [Topic Deletion Manager 1] Deletion of topic your_kafka_topic (re)started (kafka.controller.TopicDeletionManager)
[2024-10-29 22:57:03,888] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(your_kafka_topic-0 -> NONE) (kafka.controller.KafkaController)
[2024-10-29 22:57:03,888] DEBUG [Topic Deletion Manager 1] Deletion successfully completed for replicas [Topic=your_kafka_topic,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-10-29 22:57:03,888] INFO [Topic Deletion Manager 1] Handling deletion for topics your_kafka_topic (kafka.controller.TopicDeletionManager)
[2024-10-29 22:57:03,908] INFO [Topic Deletion Manager 1] Deletion of topic your_kafka_topic successfully completed (kafka.controller.TopicDeletionManager)
[2024-10-29 22:57:03,909] INFO [Controller id=1] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-10-29 22:57:03,909] DEBUG [Controller id=1] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-10-29 22:57:25,270] INFO [Controller id=1] New topics: [Set(top_k_trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(top_k_trades,Some(d3HcdpwiS7SBW3eZPMZjAQ),Map(top_k_trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 22:57:25,270] INFO [Controller id=1] New partition creation callback for top_k_trades-0 (kafka.controller.KafkaController)
[2024-10-29 22:57:50,551] INFO [Controller id=1] New topics: [HashSet(trades)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(trades,Some(ZaZe5lDCRZymaq9FpuolqA),Map(trades-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-10-29 22:57:50,552] INFO [Controller id=1] New partition creation callback for trades-0 (kafka.controller.KafkaController)
